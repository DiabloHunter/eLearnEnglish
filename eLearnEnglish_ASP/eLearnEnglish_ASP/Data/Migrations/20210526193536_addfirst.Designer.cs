// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eLearnEnglish_ASP.Data;

namespace eLearnEnglish_ASP.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210526193536_addfirst")]
    partial class addfirst
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("eLearnEnglish_ASP.Data.Music", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoverImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Difficulty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MusicUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Music");
                });

            modelBuilder.Entity("eLearnEnglish_ASP.Data.Video", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CoverImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Difficulty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Video");
                });

            modelBuilder.Entity("eLearnEnglish_ASP.Data.Vocabulary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("WordId")
                        .HasColumnType("int");

                    b.Property<int>("WordId1")
                        .HasColumnType("int");

                    b.Property<int>("WordId10")
                        .HasColumnType("int");

                    b.Property<int>("WordId11")
                        .HasColumnType("int");

                    b.Property<int>("WordId12")
                        .HasColumnType("int");

                    b.Property<int>("WordId13")
                        .HasColumnType("int");

                    b.Property<int>("WordId14")
                        .HasColumnType("int");

                    b.Property<int>("WordId15")
                        .HasColumnType("int");

                    b.Property<int>("WordId16")
                        .HasColumnType("int");

                    b.Property<int>("WordId17")
                        .HasColumnType("int");

                    b.Property<int>("WordId18")
                        .HasColumnType("int");

                    b.Property<int>("WordId19")
                        .HasColumnType("int");

                    b.Property<int>("WordId2")
                        .HasColumnType("int");

                    b.Property<int>("WordId20")
                        .HasColumnType("int");

                    b.Property<int>("WordId21")
                        .HasColumnType("int");

                    b.Property<int>("WordId22")
                        .HasColumnType("int");

                    b.Property<int>("WordId23")
                        .HasColumnType("int");

                    b.Property<int>("WordId24")
                        .HasColumnType("int");

                    b.Property<int>("WordId25")
                        .HasColumnType("int");

                    b.Property<int>("WordId26")
                        .HasColumnType("int");

                    b.Property<int>("WordId27")
                        .HasColumnType("int");

                    b.Property<int>("WordId28")
                        .HasColumnType("int");

                    b.Property<int>("WordId29")
                        .HasColumnType("int");

                    b.Property<int>("WordId3")
                        .HasColumnType("int");

                    b.Property<int>("WordId30")
                        .HasColumnType("int");

                    b.Property<int>("WordId31")
                        .HasColumnType("int");

                    b.Property<int>("WordId32")
                        .HasColumnType("int");

                    b.Property<int>("WordId33")
                        .HasColumnType("int");

                    b.Property<int>("WordId34")
                        .HasColumnType("int");

                    b.Property<int>("WordId35")
                        .HasColumnType("int");

                    b.Property<int>("WordId36")
                        .HasColumnType("int");

                    b.Property<int>("WordId37")
                        .HasColumnType("int");

                    b.Property<int>("WordId38")
                        .HasColumnType("int");

                    b.Property<int>("WordId39")
                        .HasColumnType("int");

                    b.Property<int>("WordId4")
                        .HasColumnType("int");

                    b.Property<int>("WordId40")
                        .HasColumnType("int");

                    b.Property<int>("WordId41")
                        .HasColumnType("int");

                    b.Property<int>("WordId42")
                        .HasColumnType("int");

                    b.Property<int>("WordId43")
                        .HasColumnType("int");

                    b.Property<int>("WordId44")
                        .HasColumnType("int");

                    b.Property<int>("WordId45")
                        .HasColumnType("int");

                    b.Property<int>("WordId46")
                        .HasColumnType("int");

                    b.Property<int>("WordId47")
                        .HasColumnType("int");

                    b.Property<int>("WordId48")
                        .HasColumnType("int");

                    b.Property<int>("WordId49")
                        .HasColumnType("int");

                    b.Property<int>("WordId5")
                        .HasColumnType("int");

                    b.Property<int>("WordId50")
                        .HasColumnType("int");

                    b.Property<int>("WordId51")
                        .HasColumnType("int");

                    b.Property<int>("WordId52")
                        .HasColumnType("int");

                    b.Property<int>("WordId53")
                        .HasColumnType("int");

                    b.Property<int>("WordId54")
                        .HasColumnType("int");

                    b.Property<int>("WordId55")
                        .HasColumnType("int");

                    b.Property<int>("WordId56")
                        .HasColumnType("int");

                    b.Property<int>("WordId57")
                        .HasColumnType("int");

                    b.Property<int>("WordId58")
                        .HasColumnType("int");

                    b.Property<int>("WordId59")
                        .HasColumnType("int");

                    b.Property<int>("WordId6")
                        .HasColumnType("int");

                    b.Property<int>("WordId60")
                        .HasColumnType("int");

                    b.Property<int>("WordId7")
                        .HasColumnType("int");

                    b.Property<int>("WordId8")
                        .HasColumnType("int");

                    b.Property<int>("WordId9")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WordId");

                    b.ToTable("Vocabulary");
                });

            modelBuilder.Entity("eLearnEnglish_ASP.Data.Word", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Example")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExampleTranslation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Exprassion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WordTranslation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Word");
                });

            modelBuilder.Entity("eLearnEnglish_ASP.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("VocabularyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("VocabularyId");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("eLearnEnglish_ASP.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("eLearnEnglish_ASP.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eLearnEnglish_ASP.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("eLearnEnglish_ASP.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eLearnEnglish_ASP.Data.Vocabulary", b =>
                {
                    b.HasOne("eLearnEnglish_ASP.Data.Word", null)
                        .WithMany("Vocabulary")
                        .HasForeignKey("WordId");
                });

            modelBuilder.Entity("eLearnEnglish_ASP.Models.ApplicationUser", b =>
                {
                    b.HasOne("eLearnEnglish_ASP.Data.Vocabulary", null)
                        .WithMany("User")
                        .HasForeignKey("VocabularyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eLearnEnglish_ASP.Data.Vocabulary", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("eLearnEnglish_ASP.Data.Word", b =>
                {
                    b.Navigation("Vocabulary");
                });
#pragma warning restore 612, 618
        }
    }
}
